---
layout:     post
title:      "神奇的CSS选择符"
subtitle:   "一些不常见却很好用的CSS选择符"
date:       2016-07-04
author:     "ComradeXu"
header-img: "img/post-bg-alitrip.jpg"
header-mask: 0.3
catalog:    true
tags:
    
---

**概述：**你是否用到过这些css呢...？

#### Selectors
Root
```scss
:root { }
```
使用root可以让你在DOM中选择最高级父元素。如果你在写HTML,那么html元素永远是最高的。

因为对于一个目标元素伪类选择器有更高特性，你可以用:root重写<html>元素。
<img src="/img/gif1.gif" />
<center>使用:root改变背景颜色</center>

#### First Line

```scss
::first-line
```
::first-line 选择器可以让你选择段落第一行，当然，还有其他选择器让你可以选择第一段，但是使用这个方式，可以设计第一行样式，有更大的设计空间。

更令让惊喜的功能，该选择器可以重写。相当棒的，不是吗。
<img src="/img/gif2.gif" />
<center>改变段落第一行元素</center>

#### First Letter

```scss
::first-letter
```
和上面个的很相似，该选择器可以让我们选择块级元素的第一个字母。这让我们在设计首字下沉是非常方便快捷。

<img src="/img/gif3.gif" />
<center>::first-letter首字下沉效果</center>

#### Not Selector

```scss
:not(x)
```
:not(x)选择器在你没有指定时选择目标元素，下面的例子将为你详细说明。

```scss
<ul>
    <li>List Item</li>
    <li>List Item</li>
    <li class="active">List Item</li>
    <li>List Item</li>
</ul>
```
不使用"active",也可以选择所有项目，只需要下面的代码：
```scss
ul li:not(.active) {}
```
该方式对于添加导航元素相当方便，看看下面的例子，你就知道。
<img src="/img/gif4.gif" />
<center>使用:not() 选择所有列出的元素，不使用active</center>

#### Combinators

```scss
span + span
```
技术上来说，这不是一个选择器，但可以把两个选择器放在一起。使用"+"，可以直接选择元素，把另外一个放在后面。下面是例子：

```scss
<section>
    <blockquote>Lorem ipsum blah blah blah</blockquote>
    <p>Lorem ipsum blah blah blah</p>
    <p>Lorem ipsum blah blah blah</p>
</section>
```
使用下面CSS：
```scss
blockquote + p { font-weight: bold; }
```
第二段元素就会加粗。
<img src="/img/gif5.gif" />
<center>引用元素后面使用相邻选择符</center>

#### General Sibling Combinator

普通相邻选择符
```scss
figure ~ p {}
```
使用你设计的页面层次结构，就是他了。例如，使用上面的代码，只影响图形元素后的段落元素。

<img src="/img/gif6.gif" />
<center>使用普通相邻选择符选择所有段落</center>